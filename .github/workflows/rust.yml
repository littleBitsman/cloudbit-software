name: Build + Release

on:
  push:
    paths: ["src", "src/**", "Cargo.toml"]

  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write

jobs:
  build-branch:
    runs-on: ubuntu-latest
    if: ${{ github.ref_type != 'tag' }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Build
      uses: houseabsolute/actions-rust-cross@v0
      with:
        target: armv5te-unknown-linux-musleabi
        args: --release
    - name: Move file
      run: mv ./target/armv5te-unknown-linux-musleabi/release/cloud_client ./cloud_client
    - name: Push build
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        {
          git commit -am "build"
          git push
        } || echo "nothing changed"


  build-releases:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    strategy:
      matrix:
        version: ['main', 'udp']
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ matrix.version }}
    - name: Build
      uses: houseabsolute/actions-rust-cross@v0
      with:
        target: armv5te-unknown-linux-musleabi
        args: --release
    - name: Move file
      run: mv ./target/armv5te-unknown-linux-musleabi/release/cloud_client ./cloud_client_${{ matrix.version }}
    - name: Push build
      if: ${{ github.ref_type == 'branch' }}
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        cp ./cloud_client_${{matrix.version}} ./cloud_client
        {
          git commit -am "build"
          git push
        } || echo "nothing changed"
    - name: Upload output file
      uses: actions/upload-artifact@v4
      with: 
        name: cloud_client_${{ matrix.version }}
        path: ./cloud_client_${{ matrix.version }}
  release:
    runs-on: ubuntu-latest
    if: ${{ github.ref_type != 'branch' }}
    needs: 'build-releases'
    steps: 
      - name: Make artifacts directory
        run: mkdir artifacts
      - name: Get artifacts
        uses: actions/download-artifact@v4.1.7
        with: 
          path: ./artifacts
          merge-multiple: true
      - name: Publish
        uses: softprops/action-gh-release@v2
        with: 
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          fail_on_unmatched_files: true
          files: ./artifacts/*
